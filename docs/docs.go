// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate_swagger = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/login": {
            "post": {
                "description": "Login with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "login user input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.LoginResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/balance": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Add Balance Amount",
                "parameters": [
                    {
                        "description": "add balance req",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UpdateBalanceAmountReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/balance/header": {
            "get": {
                "description": "get balance in net amount (balance - paid bills)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Get Balance Header",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.GetBalanceAmountResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/balance/logs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Get All Balance Logs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc / desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "balance log time start (lower bound)",
                        "name": "log_start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "balance log time end (upper bound)",
                        "name": "log_end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entity.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.BalanceLog"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/bill": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bill"
                ],
                "summary": "Register Bill",
                "parameters": [
                    {
                        "description": "add bill request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.AddBillReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/bill/header": {
            "get": {
                "description": "get bill overdue open and draft stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bill"
                ],
                "summary": "Get Bill Header For Raw Only",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.BillHeaderResp"
                        }
                    }
                }
            }
        },
        "/bill/status/{billId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bill"
                ],
                "summary": "Update Bill Status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bill id",
                        "name": "billId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update bill status request (paid/cancelled)",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.BillUpdateStatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/bill/{billId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bill"
                ],
                "summary": "Get Bill Details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bill id",
                        "name": "billId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.BillDetailsResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Bill more detail but not status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bill"
                ],
                "summary": "Update Bill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bill id",
                        "name": "billId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update bill req",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UpdateBillReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete bill that are not paid yet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bill"
                ],
                "summary": "Delete Bill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bill id",
                        "name": "billId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/bills": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bill"
                ],
                "summary": "List All Bill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc / desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by bill status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by supplier name",
                        "name": "vendor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by bill type",
                        "name": "billType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search lower limit event time",
                        "name": "dateFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search upper limit event time",
                        "name": "dateTo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entity.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.VSupplierBill"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/item": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Register Item",
                "parameters": [
                    {
                        "description": "add item request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.AddItemReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/item/{itemId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Update Item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "item id",
                        "name": "itemId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update item request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UpdateItemReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Delete Item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "item id",
                        "name": "itemId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ping"
                ],
                "summary": "ping example",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token from login user (use Bearer in front of the jwt)",
                        "name": "x-access-token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/recurring_bill": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recurring Bill"
                ],
                "summary": "Register Recurring Bill",
                "parameters": [
                    {
                        "description": "add recurring bill request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.AddRecurringBillReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/recurring_bill/status/{recurringBillId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recurring Bill"
                ],
                "summary": "Update Recurring Bill Status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "recurring bill id",
                        "name": "recurringBillId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update bill status request (active/inactive)",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UpdateBillRecurringStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/recurring_bills": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recurring Bill"
                ],
                "summary": "List All Recurring Bills",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc / desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entity.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.RecurringBill"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/supplier": {
            "post": {
                "description": "register supplier (vendor or customer)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Register Supplier",
                "parameters": [
                    {
                        "description": "supplier request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SupplierAddReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/supplier/details/{supplierId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Get Details Supplier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "supplier id",
                        "name": "supplierId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Supplier"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/supplier/items": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Get Supplier and Item Detail by Item Name",
                "parameters": [
                    {
                        "description": "list supplier by item req",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ListSupplierByItemReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ListSupplierByItemResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/supplier/{supplierId}/items": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Get All Items By Supplier Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "supplier id",
                        "name": "supplierId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.ListItemBySupplierResp"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        },
        "/suppliers": {
            "get": {
                "description": "get suppliers by their type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Get All Suplier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc / desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "supplier name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "supplier email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "supplier address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "supplier type (vendor or customer)",
                        "name": "supplierType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrRespController"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.AddBillReq": {
            "type": "object",
            "properties": {
                "bill_account_number": {
                    "type": "string"
                },
                "bill_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Attachment"
                    }
                },
                "bill_bank_name": {
                    "type": "string"
                },
                "bill_due_date": {
                    "type": "string"
                },
                "bill_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ItemPurchase"
                    }
                },
                "bill_notes": {
                    "type": "string"
                },
                "bill_shipping_cost": {
                    "type": "number"
                },
                "bill_start_date": {
                    "type": "string"
                },
                "bill_type": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "integer"
                }
            }
        },
        "entity.AddItemReq": {
            "type": "object",
            "properties": {
                "item_description": {
                    "type": "string"
                },
                "item_name": {
                    "type": "string"
                },
                "item_purchase_price": {
                    "type": "number"
                },
                "item_sell_price": {
                    "type": "number"
                },
                "item_unit": {
                    "type": "string"
                },
                "item_wholesalers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.WholeSaler"
                    }
                },
                "supplier_id": {
                    "type": "integer"
                }
            }
        },
        "entity.AddRecurringBillReq": {
            "type": "object",
            "properties": {
                "bill_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Attachment"
                    }
                },
                "recurring_bill_account_number": {
                    "type": "string"
                },
                "recurring_bill_bank_name": {
                    "type": "string"
                },
                "recurring_bill_end_date": {
                    "type": "string"
                },
                "recurring_bill_frequency": {
                    "type": "string"
                },
                "recurring_bill_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ItemPurchase"
                    }
                },
                "recurring_bill_notes": {
                    "type": "string"
                },
                "recurring_bill_payment_due": {
                    "type": "integer"
                },
                "recurring_bill_shipping_cost": {
                    "type": "number"
                },
                "recurring_bill_start_date": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Attachment": {
            "type": "object",
            "properties": {
                "attachment_file": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "attachment_name": {
                    "type": "string"
                }
            }
        },
        "entity.BillDetailsResp": {
            "type": "object",
            "properties": {
                "bill_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Attachment"
                    }
                },
                "bill_due_date": {
                    "type": "string"
                },
                "bill_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ItemBill"
                    }
                },
                "bill_number": {
                    "type": "string"
                },
                "bill_order_number": {
                    "type": "string"
                },
                "bill_shipping_cost": {
                    "type": "number"
                },
                "bill_start_date": {
                    "type": "string"
                },
                "bill_status": {
                    "type": "string"
                },
                "bill_subtotal": {
                    "type": "integer"
                },
                "bill_total": {
                    "type": "integer"
                },
                "bill_type": {
                    "type": "string"
                }
            }
        },
        "entity.BillHeaderResp": {
            "type": "object",
            "properties": {
                "bill_draft": {
                    "type": "number"
                },
                "bill_open": {
                    "type": "number"
                },
                "bill_overdue": {
                    "type": "number"
                }
            }
        },
        "entity.BillUpdateStatusReq": {
            "type": "object",
            "properties": {
                "bill_status": {
                    "type": "string"
                }
            }
        },
        "entity.ErrRespController": {
            "type": "object",
            "properties": {
                "err_message": {
                    "type": "string"
                },
                "source_function": {
                    "type": "string"
                }
            }
        },
        "entity.GetBalanceAmountResp": {
            "type": "object",
            "properties": {
                "net_amount": {
                    "type": "number"
                }
            }
        },
        "entity.ItemBill": {
            "type": "object",
            "properties": {
                "item_amount": {
                    "type": "number"
                },
                "item_description": {
                    "type": "string"
                },
                "item_name": {
                    "type": "string"
                },
                "item_price": {
                    "type": "number"
                },
                "item_qty": {
                    "type": "integer"
                }
            }
        },
        "entity.ItemPurchase": {
            "type": "object",
            "properties": {
                "item_discount": {
                    "type": "number"
                },
                "item_id": {
                    "type": "integer"
                },
                "item_qty": {
                    "type": "integer"
                }
            }
        },
        "entity.ListItemBySupplierResp": {
            "type": "object",
            "properties": {
                "item_description": {
                    "type": "string"
                },
                "item_id": {
                    "type": "integer"
                },
                "item_name": {
                    "type": "string"
                },
                "item_purchase_price": {
                    "type": "number"
                },
                "item_sell_price": {
                    "type": "number"
                },
                "item_unit": {
                    "type": "string"
                },
                "wholesalers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ListWholeSaler"
                    }
                }
            }
        },
        "entity.ListSupplierByItemDetails": {
            "type": "object",
            "properties": {
                "item_description": {
                    "type": "string"
                },
                "item_purchase_price": {
                    "type": "number"
                },
                "item_sell_price": {
                    "type": "number"
                },
                "supplier_name": {
                    "type": "string"
                }
            }
        },
        "entity.ListSupplierByItemReq": {
            "type": "object",
            "properties": {
                "item_name": {
                    "type": "string"
                }
            }
        },
        "entity.ListSupplierByItemResp": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ListSupplierByItemDetails"
                    }
                },
                "item_name": {
                    "type": "string"
                }
            }
        },
        "entity.ListWholeSaler": {
            "type": "object",
            "properties": {
                "wholesaler_id": {
                    "type": "integer"
                },
                "wholesaler_price": {
                    "type": "number"
                },
                "wholesaler_qty": {
                    "type": "integer"
                }
            }
        },
        "entity.LoginReq": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "entity.LoginResp": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "entity.PagedResults": {
            "type": "object",
            "properties": {
                "data": {},
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_records": {
                    "type": "integer"
                }
            }
        },
        "entity.StatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "entity.SupplierAddReq": {
            "type": "object",
            "properties": {
                "supplier_address": {
                    "type": "string"
                },
                "supplier_city": {
                    "type": "string"
                },
                "supplier_country": {
                    "type": "string"
                },
                "supplier_description": {
                    "type": "string"
                },
                "supplier_email": {
                    "type": "string"
                },
                "supplier_name": {
                    "type": "string"
                },
                "supplier_npwp": {
                    "type": "string"
                },
                "supplier_state": {
                    "type": "string"
                },
                "supplier_telephone": {
                    "type": "string"
                },
                "supplier_type": {
                    "type": "string"
                },
                "supplier_web": {
                    "type": "string"
                },
                "supplier_whatsapp": {
                    "type": "string"
                },
                "supplier_zip_code": {
                    "type": "string"
                }
            }
        },
        "entity.UpdateBalanceAmountReq": {
            "type": "object",
            "properties": {
                "balance_amount": {
                    "type": "number"
                },
                "balance_attachment": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "balance_date_added": {
                    "type": "string"
                },
                "balance_notes": {
                    "type": "string"
                }
            }
        },
        "entity.UpdateBillRecurringStatus": {
            "type": "object",
            "properties": {
                "recurring_bill_status": {
                    "type": "string"
                }
            }
        },
        "entity.UpdateBillReq": {
            "type": "object",
            "properties": {
                "bill_account_number": {
                    "type": "string"
                },
                "bill_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Attachment"
                    }
                },
                "bill_bank_name": {
                    "type": "string"
                },
                "bill_due_date": {
                    "type": "string"
                },
                "bill_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ItemPurchase"
                    }
                },
                "bill_notes": {
                    "type": "string"
                },
                "bill_shipping_cost": {
                    "type": "number"
                },
                "bill_start_date": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "integer"
                }
            }
        },
        "entity.UpdateItemReq": {
            "type": "object",
            "properties": {
                "item_description": {
                    "type": "string"
                },
                "item_name": {
                    "type": "string"
                },
                "item_purchase_price": {
                    "type": "number"
                },
                "item_sell_price": {
                    "type": "number"
                },
                "item_unit": {
                    "type": "string"
                },
                "item_wholesalers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.WholeSaler"
                    }
                }
            }
        },
        "entity.WholeSaler": {
            "type": "object",
            "properties": {
                "wholesaler_price": {
                    "type": "number"
                },
                "wholesaler_qty": {
                    "type": "integer"
                }
            }
        },
        "model.BalanceLog": {
            "type": "object",
            "properties": {
                "balance_log_amount": {
                    "type": "number"
                },
                "balance_log_attachment": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "balance_log_id": {
                    "type": "integer"
                },
                "balance_log_notes": {
                    "type": "string"
                },
                "balance_log_time_added": {
                    "type": "string"
                }
            }
        },
        "model.RecurringBill": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "frequency": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "payment_due": {
                    "type": "integer"
                },
                "shipping_cost": {
                    "type": "number"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "model.Supplier": {
            "type": "object",
            "properties": {
                "supplier_address": {
                    "type": "string"
                },
                "supplier_city": {
                    "type": "string"
                },
                "supplier_description": {
                    "type": "string"
                },
                "supplier_email": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "integer"
                },
                "supplier_name": {
                    "type": "string"
                },
                "supplier_npwp": {
                    "type": "string"
                },
                "supplier_state": {
                    "type": "string"
                },
                "supplier_telephone": {
                    "type": "string"
                },
                "supplier_type": {
                    "type": "string"
                },
                "supplier_web": {
                    "type": "string"
                },
                "supplier_whatsapp": {
                    "type": "string"
                },
                "supplier_zip_code": {
                    "type": "string"
                }
            }
        },
        "model.VSupplierBill": {
            "type": "object",
            "properties": {
                "bill_due_date": {
                    "type": "string"
                },
                "bill_id": {
                    "type": "integer"
                },
                "bill_number": {
                    "type": "string"
                },
                "bill_order_number": {
                    "type": "string"
                },
                "bill_start_date": {
                    "type": "string"
                },
                "bill_status": {
                    "type": "string"
                },
                "bill_total": {
                    "type": "number"
                },
                "bill_type": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "integer"
                },
                "supplier_name": {
                    "type": "string"
                },
                "supplier_type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo_swagger holds exported Swagger Info so clients can modify it
var SwaggerInfo_swagger = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Test Accounting App",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate_swagger,
}

func init() {
	swag.Register(SwaggerInfo_swagger.InstanceName(), SwaggerInfo_swagger)
}
